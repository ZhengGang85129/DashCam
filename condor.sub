### Usage:
###    condor_submit condor.sub  -batch_name "test" -a "working_dir=$PWD"


#### FIXME
working_dir             = /eos/user/y/ykao/SWAN_projects/kaggle/DashCam

executable              = train.acceptYAML.sh
arguments               = $(yaml_file) $(working_dir)
output                  = matrix.$(job_label).$(ClusterId).$(ProcId).out
error                   = matrix.$(job_label).$(ClusterId).$(ProcId).err
log                     = matrix.$(ClusterId).log

when_to_transfer_output = ON_EXIT
request_GPUs = 1
request_CPUs = 12
+JobFlavour = "testmatch"
getenv = PYTHONPATH

# # Create a queue for each combination
queue job_label, yaml_file from (
         cosine_restart configs/lr_cosine_restart.yaml
         cosine_decay   configs/lr_cosine_decay.yaml
         baseline       configs/lr_baseline.yaml
#        adam  configs/opt_adam.yaml
#        nadam configs/opt_nadam.yaml
#        adamw configs/opt_adamw.yaml
#        lion  configs/opt_lion.yaml
#        ranger21 configs/opt_ranger21.yaml
#        baseline          configs/baseline_ywk.yaml
#        test             data/input.test.yaml
#        none             data/input.none.yaml
#        fog              data/input.fog.yaml
#        noise            data/input.noise.yaml
#        gaussian_blur    data/input.gaussian_blur.yaml
#        color_jitter     data/input.color_jitter.yaml
#        horizontal_flip  data/input.horizontal_flip.yaml
#        rain_effect      data/input.rain_effect.yaml
#        noBlur           data/input.noBlur.yaml
#        all              data/input.all.yaml
)
